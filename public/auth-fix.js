// –ë–ï–ó–ü–ï–ß–ù–Ü –ì–õ–û–ë–ê–õ–¨–ù–Ü –§–£–ù–ö–¶–Ü–á –î–õ–Ø –ê–í–¢–û–†–ò–ó–ê–¶–Ü–á
console.log('üöÄ Auth functions loading...');

// –ì–ª–æ–±–∞–ª—å–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
window.showRegister = function showRegister() {
  console.log('üîÑ Switching to register form');
  const loginForm = document.getElementById('loginForm');
  const registerForm = document.getElementById('registerForm');
  if (loginForm) loginForm.style.display = 'none';
  if (registerForm) registerForm.style.display = 'flex';
};

window.showLogin = function showLogin() {
  console.log('üîÑ Switching to login form');
  const loginForm = document.getElementById('loginForm');
  const registerForm = document.getElementById('registerForm');
  if (registerForm) registerForm.style.display = 'none';
  if (loginForm) loginForm.style.display = 'flex';
};

window.login = async function login() {
  console.log('üîê Login function called');
  const nickname = document.getElementById('loginNickname')?.value?.trim();
  const password = document.getElementById('loginPassword')?.value;

  if (!nickname || !password) {
    alert('–í–≤–µ–¥—ñ—Ç—å nickname —Ç–∞ password');
    return;
  }

  try {
    const response = await fetch('/api/auth/login', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ nickname, password })
    });

    const data = await response.json();
    if (data.success) {
      alert('–£—Å–ø—ñ—à–Ω–∏–π –≤—Ö—ñ–¥!');
      localStorage.setItem('token', data.token);
      localStorage.setItem('nickname', data.nickname);
      location.reload();
    } else {
      alert('–ü–æ–º–∏–ª–∫–∞: ' + data.error);
    }
  } catch (error) {
    alert('–ü–æ–º–∏–ª–∫–∞ –∑\'—î–¥–Ω–∞–Ω–Ω—è: ' + error.message);
  }
};

window.register = async function register() {
  console.log('üìù Register function called');
  const nickname = document.getElementById('regNickname')?.value?.trim();
  const password = document.getElementById('regPassword')?.value;

  if (!nickname || !password) {
    alert('–í–≤–µ–¥—ñ—Ç—å nickname —Ç–∞ password');
    return;
  }

  if (nickname.length < 3) {
    alert('Nickname –º–∞—î –±—É—Ç–∏ –º—ñ–Ω—ñ–º—É–º 3 —Å–∏–º–≤–æ–ª–∏');
    return;
  }

  if (password.length < 6) {
    alert('Password –º–∞—î –±—É—Ç–∏ –º—ñ–Ω—ñ–º—É–º 6 —Å–∏–º–≤–æ–ª—ñ–≤');
    return;
  }

  try {
    const response = await fetch('/api/auth/register', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ nickname, password })
    });

    const data = await response.json();
    if (data.success) {
      alert('–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞!');
      localStorage.setItem('token', data.token || data.user?.token);
      localStorage.setItem('nickname', data.nickname || data.user?.nickname);
      location.reload();
    } else {
      alert('–ü–æ–º–∏–ª–∫–∞: ' + data.error);
    }
  } catch (error) {
    alert('–ü–æ–º–∏–ª–∫–∞ –∑\'—î–¥–Ω–∞–Ω–Ω—è: ' + error.message);
  }
};

console.log('‚úÖ All auth functions loaded successfully');