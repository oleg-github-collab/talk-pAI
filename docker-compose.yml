version: '3.8'

services:
  # Talk pAI Main Application
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:talkpai123@postgres:5432/talkpai
      - WEBRTC_SERVER_URL=http://webrtc-server:3001
      - COTURN_URL=turn:coturn:3478
      - COTURN_USERNAME=talkpai
      - COTURN_CREDENTIAL=talkpai123
    depends_on:
      - postgres
      - webrtc-server
      - coturn
    volumes:
      - ./public:/app/public
    networks:
      - talkpai-network

  # WebRTC Signaling Server
  webrtc-server:
    build: ./webrtc-server
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - COTURN_URL=turn:coturn:3478
      - COTURN_USERNAME=talkpai
      - COTURN_CREDENTIAL=talkpai123
      - TURN_SECRET=talkpai-secret
      - ALLOWED_ORIGINS=http://localhost:8080,https://talk-pai.up.railway.app
    depends_on:
      - coturn
    networks:
      - talkpai-network

  # COTURN Server for WebRTC
  coturn:
    image: coturn/coturn:alpine
    ports:
      - "3478:3478/udp"
      - "3478:3478/tcp"
      - "5349:5349/udp"
      - "5349:5349/tcp"
      - "49152-65535:49152-65535/udp"
    environment:
      - DETECT_RELAY_IP=yes
    command: >
      -n
      --log-file=stdout
      --min-port=49152
      --max-port=65535
      --fingerprint
      --lt-cred-mech
      --use-auth-secret
      --static-auth-secret=talkpai-secret
      --realm=talkpai.com
      --server-name=talk-pai-coturn
      --listening-port=3478
      --tls-listening-port=5349
      --listening-ip=0.0.0.0
      --relay-ip=0.0.0.0
      --verbose
    networks:
      - talkpai-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=talkpai
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=talkpai123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/production-schema.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - talkpai-network

  # Redis for session storage and caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - talkpai-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
      - webrtc-server
    networks:
      - talkpai-network

volumes:
  postgres_data:
  redis_data:

networks:
  talkpai-network:
    driver: bridge